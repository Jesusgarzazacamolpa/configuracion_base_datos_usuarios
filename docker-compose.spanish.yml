version: '3.8'

# Docker Compose con configuración en español (ALTERNATIVO)
# Usar este archivo si quieres locales en español

services:
  postgres:
    build: 
      context: .
      dockerfile: Dockerfile.spanish  # Usa el Dockerfile con locales en español
    container_name: postgres_db_spanish
    restart: always
    environment:
      # Configuración de la base de datos
      POSTGRES_DB: usuarios
      POSTGRES_USER: jesusgarza
      POSTGRES_PASSWORD: wars3yo10
      
      # Configuración adicional
      PGDATA: /var/lib/postgresql/data/pgdata
      
      # Variables de locale en español
      LANG: es_ES.UTF-8
      LANGUAGE: es_ES:es
      LC_ALL: es_ES.UTF-8
    
    ports:
      # Puerto para acceso remoto (puerto_host:puerto_contenedor)
      - "5432:5432"
    
    volumes:
      # Persistencia de datos
      - postgres_data:/var/lib/postgresql/data
      
      # Archivos de configuración (usar la versión en español)
      - ./config/postgresql.spanish.conf:/etc/postgresql/postgresql.conf
      - ./config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      
      # Scripts de inicialización
      - ./init-scripts:/docker-entrypoint-initdb.d
    
    networks:
      - postgres_network
    
    healthcheck:
      test: ["CMD-SHELL", "pg_ready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Opcional: pgAdmin para administración web
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_spanish
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - postgres_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  postgres_network:
    driver: bridge